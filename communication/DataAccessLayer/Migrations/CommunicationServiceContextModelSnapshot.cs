// <auto-generated />
using System;
using DataAccessLayer.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(CommunicationServiceContext))]
    partial class CommunicationServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Entities.ChatEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmergencyEventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyEventId")
                        .IsUnique();

                    b.ToTable("ChatEvents");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("MessageId")
                        .IsUnique();

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.EmergencyEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("ReportedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ReportedBy")
                        .HasColumnType("uuid");

                    b.Property<int>("Severity")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EmergencyEvent");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ChatEvent", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.EmergencyEvent", "EmergencyEvent")
                        .WithOne("ChatEvent")
                        .HasForeignKey("DataAccessLayer.Entities.ChatEvent", "EmergencyEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmergencyEvent");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ChatMessage", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.ChatEvent", "ChatEvent")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.Message", "Message")
                        .WithOne("ChatMessage")
                        .HasForeignKey("DataAccessLayer.Entities.ChatMessage", "MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatEvent");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ChatEvent", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.EmergencyEvent", b =>
                {
                    b.Navigation("ChatEvent")
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Message", b =>
                {
                    b.Navigation("ChatMessage")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
